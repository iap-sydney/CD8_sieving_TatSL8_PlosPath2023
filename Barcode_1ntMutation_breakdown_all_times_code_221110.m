%Steffen Docken
%7-7-21
%This code loads the barcode-SL8 data and creates heatmaps for each animal
%based on code from 15-6-21

clear
close all
load UPenn_FTY_barcode_SL8_Mutation_data_210607.mat

addpath('Data_importation/');
addpath('Poisson_model_variant_reactivation/');
addpath('General_Functions/');

paper_fig_location = 'Figures/';

load Poisson_model_variant_reactivation/Single_aa_mutations.mat

WT_SL8_seq = 'STPESANL';

Num_animals = length(Data_SL8_Plasma);

save_output = 1; %indicate if save log10 SL8 fractions.


log10_prop_lim = [-3, 0]; %limits for heatmap scale
background_scale_lim = [0, 5]; %used to adjust and get the desired color 
%gray for the background
aa_color_lim = [1, 21];

CD8_depl_start = 465; %actual CD8 depletion time %CD8 depletion was started on this day post 
%inoculation or soon after.
% 1000; %late time to include CD8 depletion

bcode_SL8_count = 0; %counter to keet track of how many barcode-SL8 timecourse
%have been plotted.

for ii = 1:Num_animals
    [Data_SL8_Plasma_animal_wWT, Data_SL8_LNMC_animal_wWT,...
        Data_SL8_PBMC_animal_wWT] = SL8_variant_count_210607(Data_SL8_Plasma(ii),...
        Data_SL8_LNMC(ii), Data_SL8_PBMC(ii)); %Data strucs for current
    %animal. will only contain SL8 variants detected in Plasma above LOD in
    %at least one time point. Includes all SL8 aa variants regardless of how
    %many aa mutations and combines all nt sequences that give the same aa
    %sequence

    [Data_SL8_Plasma_animal, Data_SL8_LNMC_animal,...
        Data_SL8_PBMC_animal] = ...
        SL8_single_mut_variant_count_221107(Data_SL8_Plasma(ii),...
        Data_SL8_LNMC(ii), Data_SL8_PBMC(ii)); %Data strucs for current
    %animal. will only contain SL8 variants where aa sequence can be
    %generated by a single nt mutation

    %adding WT to data
    for jj = 1:3
        switch jj
            case 1 %Plasma
                WT_data = Data_SL8_Plasma_animal_wWT;
                OneMut_data = Data_SL8_Plasma_animal;
            case 2 %LNMC
                WT_data = Data_SL8_LNMC_animal_wWT;
                OneMut_data = Data_SL8_LNMC_animal;

            case 3 %PBMC
                WT_data = Data_SL8_PBMC_animal_wWT;
                OneMut_data = Data_SL8_PBMC_animal;

        end
        
        if (isempty(WT_data.dpi))
            continue %skip iteration if no data
        end

        OneMut_data.SL8_ID = [WT_data.SL8_ID(:,1),...
            OneMut_data.SL8_ID];
        OneMut_data.V.count = [WT_data.V.count(:,1,:),...
            OneMut_data.V.count]; 
        OneMut_data.V.LOD = [WT_data.V.LOD(:,1,:),...
            OneMut_data.V.LOD]; 
        OneMut_data.V.LOD_ind = [WT_data.V.LOD_ind(:,1,:),...
            OneMut_data.V.LOD_ind]; 
        OneMut_data.W_var.count = [WT_data.W_var.count(:,1,:),...
            OneMut_data.W_var.count]; 
        OneMut_data.W_var.LOD = [WT_data.W_var.LOD(:,1,:),...
            OneMut_data.W_var.LOD]; 
        OneMut_data.W_var.LOD_ind = [WT_data.W_var.LOD_ind(:,1,:),...
            OneMut_data.W_var.LOD_ind]; 
        
        switch jj
            case 1 %Plasma
                 Data_SL8_Plasma_animal = OneMut_data;
            case 2 %LNMC
                 Data_SL8_LNMC_animal = OneMut_data;

            case 3 %PBMC
                 Data_SL8_PBMC_animal = OneMut_data;

        end

    end

    VL_data_struct_animal = VL_data(ii);
    
    num_timepoints_animal = find(Data_SL8_Plasma_animal.dpi < CD8_depl_start, 1, 'last');
    %not including time points after CD8 depletion by finding index of last
    %time point before CD8 depletion
    
    Data_SL8_Plasma_animal.timing = Data_SL8_Plasma_animal.timing(1:num_timepoints_animal);
    Data_SL8_Plasma_animal.phase = Data_SL8_Plasma_animal.phase(1:num_timepoints_animal);
    Data_SL8_Plasma_animal.dpi = Data_SL8_Plasma_animal.dpi(1:num_timepoints_animal);
    %including only timing data for before CD8 depletion
    
    if (isempty(num_timepoints_animal))
        continue
    end
    
    num_bcodes_animal = length(Data_SL8_Plasma_animal.barcode_ID);
    
    Var_det_ind = find(sum(Data_SL8_Plasma_animal.V.LOD_ind, 3));
    %finding indices of all SL8 variants detected at least once
    
    Data_SL8_Plasma_animal.SL8_ID = Data_SL8_Plasma_animal.SL8_ID(:,Var_det_ind);
    %variant IDs for only those detected at least once
    
    Data_SL8_Plasma_animal.V.count = Data_SL8_Plasma_animal.V.count(1,Var_det_ind,:);
    Data_SL8_Plasma_animal.V.LOD = Data_SL8_Plasma_animal.V.LOD(1,Var_det_ind,:);
    Data_SL8_Plasma_animal.V.LOD_ind = Data_SL8_Plasma_animal.V.LOD_ind(1,Var_det_ind,:);
    
    Data_SL8_Plasma_animal.W_var.count = Data_SL8_Plasma_animal.W_var.count(:,Var_det_ind,:);
    Data_SL8_Plasma_animal.W_var.LOD = Data_SL8_Plasma_animal.W_var.LOD(:,Var_det_ind,:);
    Data_SL8_Plasma_animal.W_var.LOD_ind = Data_SL8_Plasma_animal.W_var.LOD_ind(:,Var_det_ind,:);
    
    if strcmp(VL_data_struct_animal.Group, 'A')
        Group_ART_days = Group_A_ART_days;
    elseif strcmp(VL_data_struct_animal.Group, 'B')
        Group_ART_days = Group_B_ART_days;
    else
        disp('ERROR: group not identified');
    end
    
    num_var_animal = length(Data_SL8_Plasma_animal.SL8_ID(1,:));
    %number of detected SL8 variants
    
    WT_ind = find(Data_SL8_Plasma_animal.SL8_ID(1,:) == 0);
    if (length(WT_ind) ~= 1)
        disp('ERROR: incorrect number of WT indices');
    end
    
    SL8_timecourse_array_it = zeros(num_timepoints_animal, num_var_animal);
    %array that will hold the prevelence of each SL8 variant in the total
    %viral load over time
    
    for jj = 1:num_timepoints_animal
        
        S_it = Data_SL8_Plasma_animal.S(jj); %number of sequences at this time
        
        [~, V_prop_array_it] = background_subtraction(Data_SL8_Plasma_animal.V.count(1,:,jj),...
            Data_SL8_Plasma_animal.V.LOD(1,:,jj), S_it);
        
        V_prop_array_it(~Data_SL8_Plasma_animal.V.LOD_ind(1,:,jj)) = 0;
        %resetting values below 0 to 0 (as undetected)

        SL8_timecourse_array_it(jj, :) = V_prop_array_it;
        
    end
    
    %% SL8 timecourse
    SL8_timecourse_array_it(SL8_timecourse_array_it <= 0) = NaN;

    log10_SL8_timecourse_array_it = log10(SL8_timecourse_array_it);

    figure(20)
    subplot(4, 4, ii)
    h = heatmap(Data_SL8_Plasma_animal.SL8_ID(1,:),...
        Data_SL8_Plasma_animal.dpi,...
        log10_SL8_timecourse_array_it, 'ColorLimits', log10_prop_lim,...
        'MissingDataColor', 'white','GridVisible','off');
    colormap(flipud(parula));

    title(Data_SL8_Plasma_animal.animal_ID);

    ylabels_vec = cell(length(Data_SL8_Plasma_animal.timing),1);
    for kk = 1:length(Data_SL8_Plasma_animal.timing)
        ylabels_vec{kk} = strcat(Data_SL8_Plasma_animal.phase(kk),...
            ": day ", num2str(Data_SL8_Plasma_animal.timing(kk)));
    end

    h.YDisplayLabels = ylabels_vec;

    xlabels_vec = cell(length(Data_SL8_Plasma_animal.SL8_ID(1,:)),1);
    xlabels_vec{1} = 'WT';
    for kk = 2:length(Data_SL8_Plasma_animal.SL8_ID(1,:))
        xlabels_vec{kk} = num2str(Data_SL8_Plasma_animal.SL8_ID(1,kk));
    end
    
    %% variant IDs
    SL8_ID_it = Data_SL8_Plasma_animal.SL8_ID(2:end,:);
    SL8_ID_it(SL8_ID_it == 0) = NaN;

    SL8_ID_text_it = cell(size(SL8_ID_it));
    for kk = 1:length(SL8_ID_text_it(:,1))
        SL8_ID_text_it{kk, 1} = WT_SL8_seq(kk);
        for ll = 2:length(SL8_ID_text_it(1,:))
            if (~isnan(SL8_ID_it(kk,ll)))
                SL8_ID_text_it{kk,ll} = ...
                    aa_translation_210603(SL8_ID_it(kk,ll));
            end
        end
    end

    %% saving info
    if (save_output == 1)

        num_SL8_var = length(Data_SL8_Plasma_animal.SL8_ID(1,:));

        if (strcmp(Data_SL8_Plasma_animal.animal_ID, "RJy13")||...
                strcmp(Data_SL8_Plasma_animal.animal_ID, "RUh14"))
            writematrix([[NaN, NaN, Data_SL8_Plasma_animal.dpi];...
                [(1:num_SL8_var)', Data_SL8_Plasma_animal.SL8_ID(1,:)', log10_SL8_timecourse_array_it']],...
                strcat(paper_fig_location, 'csvs/', Data_SL8_Plasma_animal.animal_ID,...
                '_SL8_variant_prop.csv'));

            writecell([num2cell([NaN, NaN, 1:8]);...
                [num2cell((1:num_SL8_var)'), num2cell(Data_SL8_Plasma_animal.SL8_ID(1,:)'), SL8_ID_text_it']],...
                strcat(paper_fig_location, 'csvs/', Data_SL8_Plasma_animal.animal_ID,...
                '_SL8_variant_ID.csv'));
        end
        
    end
    
end